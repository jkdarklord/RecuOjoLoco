package test;

import org.apache.log4j.BasicConfigurator;

import edu.uci.ics.crawler4j.crawler.CrawlConfig;
import edu.uci.ics.crawler4j.crawler.CrawlController;
import edu.uci.ics.crawler4j.fetcher.PageFetcher;
import edu.uci.ics.crawler4j.robotstxt.RobotstxtConfig;
import edu.uci.ics.crawler4j.robotstxt.RobotstxtServer;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Path;
import java.nio.file.Paths;

import javax.swing.JOptionPane;

public class Controller {
	Path currentRelativePath;
	File seedIndex;
	
	public Controller(){
		currentRelativePath = Paths.get("");
		createSeedList();
	}

    public void startCrawling(String seed, int crawlerCount, boolean limitCrawling, int documentMax, String directoryName) throws Exception {
            String crawlStorageFolder = "/data/";
            int numberOfCrawlers = crawlerCount;
            BasicConfigurator.configure();

            CrawlConfig config = new CrawlConfig();
            config.setCrawlStorageFolder(crawlStorageFolder);

            PageFetcher pageFetcher = new PageFetcher(config);
            RobotstxtConfig robotstxtConfig = new RobotstxtConfig();
            RobotstxtServer robotstxtServer = new RobotstxtServer(robotstxtConfig, pageFetcher);
            CrawlController controller = new CrawlController(config, pageFetcher, robotstxtServer);

            controller.addSeed(seed);
            addSeedToIndex(seed);
            
            setParameters(seed,crawlerCount,limitCrawling,documentMax,directoryName);
            
            //controller.start(MyCrawler.class, numberOfCrawlers);
    }
    
    
    public void setParameters(String seed, int crawlerCount, boolean limitCrawling, int documentMax, String directoryName){
        MyCrawler.urlDomain = seed;
        MyCrawler.directory = new File(seed);
        MyCrawler.limit=limitCrawling;
        MyCrawler.maxCount=documentMax;
        MyCrawler.directory = new File(currentRelativePath.toAbsolutePath().toString()+"\\CrawlerFiles\\"+directoryName);
        MyCrawler.directory.mkdirs();
    }
    
    public void createSeedList(){
    	try{
	    	seedIndex = new File(new File(currentRelativePath.toAbsolutePath().toString()+"\\CrawlerFiles\\"), "seedIndex.txt");
	    	seedIndex.mkdirs();
	    	FileWriter fw = new FileWriter(seedIndex);
	    	PrintWriter pw = new PrintWriter(fw);
	    	pw.write("0\n");
	    	pw.write("\r\n");
	    	pw.close();
	    	JOptionPane.showMessageDialog(null,"CHECKPOINT");
    	}
    	catch(IOException x){
            System.err.println(x);
        }   
    }
    
    public void addSeedToIndex(String newSeed){
    	try{
    		BufferedReader file = new BufferedReader(new FileReader("notes.txt"));
        	String line;String input = "";
        	while ((line = file.readLine()) != null) input += line + '\n';
        	file.close();
        	JOptionPane.showMessageDialog(null,input);

        	
    	}
    	catch(IOException x){
    		System.err.println(x);
    	}
    }
}